<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>hbase_sql-${envClassifier}</artifactId>
    <name>${project.artifactId}</name>
    <description>SQL engine based on HBase</description>
    <version>2.0.0-SNAPSHOT</version>
    <parent>
        <artifactId>spliceengine-parent</artifactId>
        <groupId>com.splicemachine</groupId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>
    <properties>
        <!--Skip server startup-->
        <server.skip.start>skipServerStart</server.skip.start>
        <!--Ant task to run shell scripts-->
        <shell.command>/bin/bash</shell.command>
        <start.script>${project.basedir}/src/test/bin/start-splice-its</start.script>
        <stop.script>${project.basedir}/src/test/bin/stop-splice-its</stop.script>
        <skipTests>${maven.skip.tests}</skipTests>
        <skip.dep.copy>${skipSparkPrepare}</skip.dep.copy>
    </properties>


    <dependencies>
        <!--
        -sf- For some absurd reason, we have an annoying dependency conflict between hbase and
        spark dependencies, which results in YARN not being able to boot if we allow the normal dependency
        chain. To avoid this (and therefore to allow YARN to boot), we have to explicitely state this jersey
        dependency here. When we figure out how to avoid that, then we can remove this, since we don't
        actually depend on jersey anywhere.
        -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_machine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage-${envClassifier}</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_pipeline-${envClassifier}</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>${spark-assembly-id}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!--Test dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>pipeline_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_si_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage-${envClassifier}</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-testing-util</artifactId>
            <version>${hbase.version}</version>
            <!--intentionally compile scope,we use this dependency at app compile and runtime-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>2.6.0-mr1-${envClassifier}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-exec</artifactId>
            <version>1.1.0-${envClassifier}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-common</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-client</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-network-yarn_2.11</artifactId>
            <version>1.5.2</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_machine</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-common</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-nodemanager</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-tests</artifactId>
            <version>${hadoop.version}</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
            <version>${hadoop.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--This used to be confinded to the spark-prepare profile, but is now done always by default
                 To disable, use skipSparkPrepare on the command line
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.dep.copy}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: SERIAL -->
                    <execution>
                        <id>integration-tests-serial</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!--<groups>com.splicemachine.test.SerialTest</groups>-->
                            <excludedGroups>${excluded.categories}</excludedGroups>
                            <argLine>-Xmx3g</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_machine</dependency>
                            </dependenciesToScan>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <excludes>
                                <exclude>com/splicemachine/derby/impl/sql/execute/operations/window/test/framework/** </exclude>
                            </excludes>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </execution>

                    <!--<execution>-->
                    <!--<id>integration-tests-parallel</id>-->
                    <!--<goals>-->
                    <!--<goal>integration-test</goal>-->
                    <!--<goal>verify</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->
                    <!--<excludedGroups>com.splicemachine.test.SerialTest, ${excluded.categories}</excludedGroups>-->
                    <!--<skipTests>${skip.integration.tests}</skipTests>-->
                    <!--<parallel>classes</parallel>-->
                    <!--<threadCount>1</threadCount>-->
                    <!--<perCoreThreadCount>false</perCoreThreadCount>-->
                    <!--<argLine>-Xmx3g</argLine>-->
                    <!--<redirectTestOutputToFile>true</redirectTestOutputToFile>-->
                    <!--<includes>-->
                    <!--<include>**/*IT.java</include>-->
                    <!--</includes>-->
                    <!--<excludes>-->
                    <!--&lt;!&ndash; Skip all unit tests &ndash;&gt;-->
                    <!--<exclude>**/*Test.java</exclude>-->
                    <!--</excludes>-->
                    <!--<runOrder>alphabetical</runOrder>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>############### start-splice-its ###############</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StartSpliceServer" unless="${server.skip.start}">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                                <if>
                                    <istrue value="${failTasksRandomly}"/>
                                    <!-- run with chaos monkey (default) -->
                                    <then>
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-c"/>
                                            <arg value="-p ${envClassifier}"/>
                                        </exec>
                                    </then>
                                    <else>
                                        <!-- chaos monkey overridden: -DfailTasksRandomly=false -->
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-p ${envClassifier}"/>
                                        </exec>
                                    </else>
                                </if>

                                <property name="classpath.test" refid="maven.test.classpath"/>
                                <!--suppress MavenModelInspection -->
                                <java classname="com.splicemachine.test.SpliceTestPlatformWait"
                                      classpath="${classpath.test}"
                                      spawn="false">
                                <arg value="localhost"/>
                                <arg value="1527"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>############### stop-splice-its ###############</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StopSpliceServer" unless="${server.skip.start}">
                                <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                    <arg value="${stop.script}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>exec-maven-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>pre-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>java</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<mainClass>com.splicemachine.test.SpliceTestPlatformWait</mainClass>-->
                    <!--<arguments>-->
                        <!--<argument>localhost</argument>-->
                        <!--<argument>1527</argument>-->
                    <!--</arguments>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>cdh5.4.8</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>cdh5.4.8</value>
                </property>
            </activation>
            <properties>
                <envClassifier>cdh5.4.8</envClassifier>
                <!--  platform component versions  -->
                <hadoop.version>2.6.0-cdh5.4.8</hadoop.version>
                <hbase.version>1.0.0-cdh5.4.8-splice1.5.1-SNAPSHOT</hbase.version>
                <hive.version>1.1.0-cdh5.4.8</hive.version>
                <zookeeper.version>3.4.5-cdh5.4.8</zookeeper.version>
                <spark.version>1.5.0</spark.version>
                <spark-assembly-id>spark-assembly-hadoop2.6.0-cdh5.4.8</spark-assembly-id>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.9.1</version>
                        <executions>
                            <execution>
                                <id>add-platform-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>cdh5.4.x/src/main/java</source>
                                        <source>hbase1.0/src/main/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-platform-test-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>cdh5.4.x/src/test/java</source>
                                        <source>hbase1.0/src/test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                <resources>
                    <resource>
                        <directory>hbase1.0/src/main/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                    </resource>
                </resources>
            </build>
        </profile>
        <!-- Test Environment execution profiles-->

        <profile>
            <!-- ZooKeeper-->
            <id>spliceZoo</id>
            <activation>
                <property>
                    <name>zoo</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution> <goals> <goal>clean</goal> </goals> </execution>
                        </executions>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/hbase</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/zookeeper</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument> -Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties </argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Xmx2g</argument>
                                <argument>-Xms1g</argument>
                                <argument>-XX:MaxPermSize=256M</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4002</argument>
                                <argument>org.apache.zookeeper.server.ZooKeeperServerMain</argument>
                                <argument>2181</argument>
                                <argument>${project.build.directory}/zookeeper</argument>
                                <argument>10</argument>
                                <argument>0</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--<profile>-->
            <!--<id>spark-prepare</id>-->
            <!--<activation>-->
                <!--<property>-->
                    <!--<name>spark-prepare</name>-->
                <!--</property>-->
            <!--</activation>-->
            <!--<build>-->
            <!--</build>-->
        <!--</profile>-->
        <profile>
            <id>spliceYarn</id>
            <activation>
                <property>
                    <name>spliceYarn</name>
                </property>
            </activation>
            <properties>
                <nodeCount>1</nodeCount>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- exec:java required so that these 2 dependency properties are available (they aren't with exec:exec -->
                            <classpathScope>test</classpathScope>
                            <!--<includeProjectDependencies>false</includeProjectDependencies>-->
                            <!--<includePluginDependencies>true</includePluginDependencies>-->
                            <mainClass>com.splicemachine.test.SpliceTestYarnPlatform</mainClass>
                            <arguments>
                                <!-- Root of the serve classpath. Yarn config file (yarn-site.xml) will be written here. -->
                                <argument>${project.build.directory}/classes</argument>
                                <argument>${nodeCount}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>

            </build>
        </profile>


        <profile>
            <id>spliceFast</id>
            <activation>
                <property>
                    <name>spliceFast</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <!-- <argument>-verbose:gc</argument> -->
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Xdebug</argument>
                                <!-- <argument>-XX:+UnlockCommercialFeatures</argument>
                                <argument>-XX:+FlightRecorder</argument> -->
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10102</argument>
                                <argument>-Dsplice.authentication=NATIVE</argument>
                                <argument>-Dcom.splicemachine.enableLegacyAsserts=true</argument>
                                <argument>-Xmx8g</argument>
                                <argument>-Xms1g</argument>
                                <!-- Spark Sys props -->
                                <argument>-Dsplice.spark.app.name=SpliceMachine</argument>
                                <!--								<argument>-Dsplice.spark.broadcast.factory=org.apache.spark.broadcast.HttpBroadcastFactory</argument> -->
                                <argument>-Dsplice.spark.driver.host=localhost</argument>
                                <argument>-Dsplice.spark.driver.cores=1</argument>
                                <argument>
                                    -Dsplice.spark.driver.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dsplice.spark.driver.maxResultSize=1g</argument>
                                <argument>-Dsplice.spark.driver.memory=1g</argument>
                                <argument>-Dsplice.spark.enabled=true</argument>
                                <!--<argument>-Dsplice.spark.eventLog.dir=hdfs:///user/spark/applicationHistory</argument>-->
                                <!--<argument>-Dsplice.spark.eventLog.enabled=true</argument>-->
                                <argument>-Dsplice.spark.executor.cores=4</argument>
                                <argument>
                                    -Dsplice.spark.executor.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dsplice.spark.executor.instances=2</argument>
                                <argument>-Dsplice.spark.executor.memory=2g</argument>
                                <argument>-Dsplice.spark.io.compression.lz4.blockSize=32k</argument>
                                <argument>-Dsplice.spark.kryo.referenceTracking=false</argument>
                                <argument>
                                    -Dsplice.spark.kryo.registrator=com.splicemachine.derby.impl.SpliceSparkKryoRegistrator
                                </argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer.max=512m</argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer=4m</argument>
                                <argument>-Dsplice.spark.locality.wait=60s</argument>
                                <argument>-Dsplice.spark.logConf=true</argument>
                                <argument>-Dsplice.spark.master=yarn-client</argument>
                                <argument>
                                    -Dsplice.spark.scheduler.allocation.file=${project.basedir}/src/main/resources/fairscheduler.xml
                                </argument>
                                <argument>-Dsplice.spark.scheduler.mode=FAIR</argument>
                                <argument>-Dsplice.spark.serializer=org.apache.spark.serializer.KryoSerializer
                                </argument>
                                <argument>-Dsplice.spark.shuffle.compress=false</argument>

                                <argument>-Dsplice.spark.executor.extraJavaOptions=-XX:MaxPermSize=128m
                                    -Dhbase.rootdir=${project.build.directory}/hbase
                                    -Dlog4j.configuration=${log4j.config.uri}
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4020
                                    -enableassertions
                                </argument>
                                <argument>-Dsplice.spark.shuffle.file.buffer=128k</argument>
                                <argument>-Dsplice.spark.shuffle.memoryFraction=0.7</argument>
                                <argument>-Dsplice.spark.shuffle.service.enabled=true</argument>
                                <argument>-Dsplice.spark.storage.memoryFraction=0.1</argument>
                                <argument>-Dsplice.spark.yarn.am.waitTime=10s</argument>
                                <!-- CMS Garbage Collection -->
                                <argument>-Xmn128m</argument>
                                <argument>-XX:+UseConcMarkSweepGC</argument>
                                <argument>-XX:+UseParNewGC</argument>
                                <argument>-XX:NewSize=128m</argument>
                                <argument>-XX:MaxNewSize=128m</argument>
                                <argument>-XX:CMSInitiatingOccupancyFraction=70</argument>
                                <argument>-XX:+UseCMSInitiatingOccupancyOnly</argument>
                                <argument>-XX:MaxGCPauseMillis=100</argument>
                                <argument>-XX:MaxPermSize=256M</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-XX:MaxDirectMemorySize=1g</argument>
                                <argument>-enableassertions</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
                                <!-- Setting the updateSystemProcs option to true causes all of the system stored procedures to be re-created on server startup. -->
                                <argument>-Dderby.language.updateSystemProcs=false</argument>
                                <!-- Setting the logStatementText option to true enables logging of all statements. -->
                                <argument>-Dderby.language.logStatementText=false</argument>
                                <argument>-Dderby.infolog.append=true</argument>
                                <argument>com.splicemachine.test.SpliceTestPlatform</argument>
                                <argument>file://${project.build.directory}/hbase</argument>
                                <argument>60000</argument>
                                <argument>60010</argument>
                                <argument>60020</argument>
                                <argument>60030</argument>
                                <argument>1527</argument>
                                <argument>${failTasksRandomly}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceClusterMember</id>
            <activation>
                <property>
                    <name>spliceClusterMember</name>
                </property>
            </activation>
            <properties>
                <memberNumber>1</memberNumber>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath />
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Xmx2g</argument>
                                <argument>-Xmn128m</argument>
                                <argument>-XX:+UseConcMarkSweepGC</argument>
                                <argument>-XX:+UseParNewGC</argument>
                                <argument>-XX:NewSize=128m</argument>
                                <argument>-XX:MaxNewSize=128m</argument>
                                <argument>-XX:CMSInitiatingOccupancyFraction=70</argument>
                                <argument>-XX:+UseCMSInitiatingOccupancyOnly</argument>
                                <argument>-XX:MaxGCPauseMillis=100</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001</argument>
                                <argument>-XX:MaxPermSize=256M</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-XX:MaxDirectMemorySize=1g</argument>
                                <argument>com.splicemachine.test.SpliceTestClusterParticipant</argument>
                                <argument>${project.build.directory}/hbase</argument>
                                <argument>${memberNumber}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--<profile>-->
        <!--<id>cdh5.5.1</id>-->
        <!--<activation>-->
        <!--<property>-->
        <!--<name>env</name>-->
        <!--<value>cdh5.5.1</value>-->
        <!--</property>-->
        <!--</activation>-->
        <!--<properties>-->
        <!--<envClassifier>cdh5.5.1</envClassifier>-->
        <!--&lt;!&ndash; platform component versions &ndash;&gt;-->
        <!--<hadoop.version>2.6.0-cdh5.5.1</hadoop.version>-->
        <!--<hbase.version>1.0.0-cdh5.5.1-splice1.5.1-SNAPSHOT</hbase.version>-->
        <!--<hive.version>1.1.0-cdh5.5.1</hive.version>-->
        <!--<zookeeper.version>3.4.5-cdh5.5.1</zookeeper.version>-->
        <!--<spark.version>1.5.0</spark.version>-->
        <!--<spark-assembly-id>spark-assembly-hadoop2.6.0-cdh5.5.1</spark-assembly-id>-->
        <!--</properties>-->
        <!--<build>-->
        <!--<plugins>-->
        <!--<plugin>-->
        <!--<groupId>org.codehaus.mojo</groupId>-->
        <!--<artifactId>build-helper-maven-plugin</artifactId>-->
        <!--<version>1.9.1</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<id>add-platform-source</id>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>add-source</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<sources>-->
        <!--<source>cdh5.5.1/src/main/java</source>-->
        <!--<source>hbase1.0/src/main/java</source>-->
        <!--</sources>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--<execution>-->
        <!--<id>add-platform-test-source</id>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>add-test-source</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<sources>-->
        <!--<source>cdh5.5.1/src/test/java</source>-->
        <!--<source>hbase1.0/src/test/java</source>-->
        <!--</sources>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--</plugin>-->
        <!--</plugins>-->
        <!--<resources>-->
        <!--<resource>-->
        <!--<directory>hbase1.0/src/main/resources</directory>-->
        <!--</resource>-->
        <!--</resources>-->
        <!--</build>-->
        <!--</profile>-->

        <!--<profile>-->
        <!--<id>mapr5.0.0</id>-->
        <!--<activation>-->
        <!--<property>-->
        <!--<name>env</name>-->
        <!--<value>mapr5.0.0</value>-->
        <!--</property>-->
        <!--</activation>-->
        <!--<properties>-->
        <!--<envClassifier>mapr5.0.0</envClassifier>-->
        <!--&lt;!&ndash; platform component versions &ndash;&gt;-->
        <!--<hadoop.version>2.7.0-mapr-1506</hadoop.version>-->
        <!--<hbase.version>0.98.12-mapr-1506-splice1.5.0</hbase.version>-->
        <!--<hive.version>0.13.0-mapr-1504-protobuf250</hive.version>-->
        <!--<zookeeper.version>3.4.5-mapr-1503</zookeeper.version>-->
        <!--<maprfs.version>5.0.0-mapr</maprfs.version>-->
        <!--<spark.version>1.5.0</spark.version>-->
        <!--<spark-assembly-id>spark-assembly-hadoop2.7.0-mapr-1506</spark-assembly-id>-->
        <!--</properties>-->
        <!--<build>-->
        <!--<plugins>-->
        <!--<plugin>-->
        <!--<groupId>org.codehaus.mojo</groupId>-->
        <!--<artifactId>build-helper-maven-plugin</artifactId>-->
        <!--<version>1.9.1</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<id>add-platform-source</id>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>add-source</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<sources>-->
        <!--<source>hbase0.98/src/main/java</source>-->
        <!--</sources>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--<execution>-->
        <!--<id>add-platform-test-source</id>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>add-test-source</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<sources>-->
        <!--<source>hbase0.98/src/test/java</source>-->
        <!--</sources>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--</plugin>-->
        <!--</plugins>-->
        <!--<resources>-->
        <!--<resource>-->
        <!--<directory>hbase0.98/src/main/resources</directory>-->
        <!--</resource>-->
        <!--</resources>-->
        <!--</build>-->
        <!--</profile>-->
    </profiles>

</project>
