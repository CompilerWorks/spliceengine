splice> --
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
-- This test will cover SHOW TABLES, SHOW SCHEMAS, etc.
-- and the DESCRIBE command.
-- first, set schema to sys and demonstrate that we can see the system tables.
SET SCHEMA SYS;
0 rows inserted/updated/deleted
splice> SHOW TABLES;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
SYS                 |SYSALIASES                    |                    
SYS                 |SYSCHECKS                     |                    
SYS                 |SYSCOLPERMS                   |                    
SYS                 |SYSCOLUMNS                    |                    
SYS                 |SYSCONGLOMERATES              |                    
SYS                 |SYSCONSTRAINTS                |                    
SYS                 |SYSDEPENDS                    |                    
SYS                 |SYSFILES                      |                    
SYS                 |SYSFOREIGNKEYS                |                    
SYS                 |SYSKEYS                       |                    
SYS                 |SYSPERMS                      |                    
SYS                 |SYSROLES                      |                    
SYS                 |SYSROUTINEPERMS               |                    
SYS                 |SYSSCHEMAS                    |                    
SYS                 |SYSSEQUENCES                  |                    
SYS                 |SYSSTATEMENTS                 |                    
SYS                 |SYSSTATISTICS                 |                    
SYS                 |SYSTABLEPERMS                 |                    
SYS                 |SYSTABLES                     |                    
SYS                 |SYSTRIGGERS                   |                    
SYS                 |SYSUSERS                      |                    
SYS                 |SYSVIEWS                      |                    
SYSSPLICE              |DUAL                     |                    
splice> SET SCHEMA APP;
0 rows inserted/updated/deleted
splice> CREATE TABLE t1 (i int generated always as identity, d DECIMAL(5,2), test VARCHAR(20));
0 rows inserted/updated/deleted
splice> CREATE SCHEMA USER1;
0 rows inserted/updated/deleted
splice> SET SCHEMA = USER1;
0 rows inserted/updated/deleted
splice> CREATE TABLE t2 (i int);
0 rows inserted/updated/deleted
splice> CREATE SYNONYM USER1.T3 FOR USER1.T2;
0 rows inserted/updated/deleted
splice> CREATE VIEW v1 AS SELECT * from app.t1;
0 rows inserted/updated/deleted
splice> CREATE INDEX idx1 ON APP.t1 (test ASC);
0 rows inserted/updated/deleted
splice> CREATE PROCEDURE APP.PROCTEST(IN A INTEGER, OUT B DECIMAL(10,2))
PARAMETER STYLE JAVA READS SQL DATA LANGUAGE JAVA 
EXTERNAL NAME 'a.b.c.d.e';
0 rows inserted/updated/deleted
splice> CREATE FUNCTION APP.FUNCTTEST(A INTEGER)
RETURNS INTEGER
PARAMETER STYLE JAVA
LANGUAGE JAVA
NO SQL
EXTERNAL NAME 'a.b.c.d.e.f';
0 rows inserted/updated/deleted
splice> -- first display all tables, then display tables in one schema
SHOW TABLES;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
SYS                 |SYSALIASES                    |                    
SYS                 |SYSCHECKS                     |                    
SYS                 |SYSCOLPERMS                   |                    
SYS                 |SYSCOLUMNS                    |                    
SYS                 |SYSCONGLOMERATES              |                    
SYS                 |SYSCONSTRAINTS                |                    
SYS                 |SYSDEPENDS                    |                    
SYS                 |SYSFILES                      |                    
SYS                 |SYSFOREIGNKEYS                |                    
SYS                 |SYSKEYS                       |                    
SYS                 |SYSPERMS                      |                    
SYS                 |SYSROLES                      |                    
SYS                 |SYSROUTINEPERMS               |                    
SYS                 |SYSSCHEMAS                    |                    
SYS                 |SYSSEQUENCES                  |                    
SYS                 |SYSSTATEMENTS                 |                    
SYS                 |SYSSTATISTICS                 |                    
SYS                 |SYSTABLEPERMS                 |                    
SYS                 |SYSTABLES                     |                    
SYS                 |SYSTRIGGERS                   |                    
SYS                 |SYSUSERS                      |                    
SYS                 |SYSVIEWS                      |                    
SYSSPLICE              |DUAL                     |                    
APP                 |T1                            |                    
USER1               |T2                            |                    
splice> SHOW TABLES IN APP;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
APP                 |T1                            |                    
splice> SHOW TABLES IN app;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
APP                 |T1                            |                    
splice> -- 'describe t1' will give error, as not in current schema
DESCRIBE t1;
Splice ERROR: No table exists with the name T1
splice> DESCRIBE APP.t1;
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
I                   |INTEGER  |0   |10  |10    |AUTOINCRE&|NULL      |NO      
D                   |DECIMAL  |2   |10  |5     |NULL      |NULL      |YES     
TEST                |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> DESCRIBE app.t1;
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
I                   |INTEGER  |0   |10  |10    |AUTOINCRE&|NULL      |NO      
D                   |DECIMAL  |2   |10  |5     |NULL      |NULL      |YES     
TEST                |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> DESCRIBE v1;
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
I                   |INTEGER  |0   |10  |10    |NULL      |NULL      |NO      
D                   |DECIMAL  |2   |10  |5     |NULL      |NULL      |YES     
TEST                |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> SHOW SCHEMAS;
TABLE_SCHEM                   
------------------------------
APP                           
NULLID                        
SQLJ                          
SYS                           
SYSCAT                        
SYSCS_DIAG                    
SYSCS_UTIL                    
SYSFUN                        
SYSSPLICE                        
SYSPROC                       
SYSSTAT                       
USER1                         
splice> SHOW VIEWS IN USER1;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
USER1               |V1                            |                    
splice> SHOW PROCEDURES IN APP;
PROCEDURE_SCHEM     |PROCEDURE_NAME                |REMARKS             
------------------------------------------------------------------------
APP                 |PROCTEST                      |a.b.c.d.e           
splice> SHOW FUNCTIONS IN APP;
FUNCTION_SCHEM|FUNCTION_NAME               |REMARKS                            
-------------------------------------------------------------------------------
APP           |FUNCTTEST                   |a.b.c.d.e.f                        
splice> SHOW FUNCTIONS;
FUNCTION_SCHEM|FUNCTION_NAME               |REMARKS                            
-------------------------------------------------------------------------------
APP           |FUNCTTEST                   |a.b.c.d.e.f                        
SYSCS_UTIL    |SYSCS_CHECK_TABLE           |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_GET_DATABASE_PROPERTY |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_GET_RUNTIMESTATISTICS |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_GET_USER_ACCESS       |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_GET_XPLAIN_MODE       |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_GET_XPLAIN_SCHEMA     |org.apache.derby.catalog.SystemPro&
SYSCS_UTIL    |SYSCS_PEEK_AT_SEQUENCE      |org.apache.derby.catalog.SystemPro&
SYSSPLICE        |BLOBCREATELOCATOR           |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |BLOBGETBYTES                |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |BLOBGETLENGTH               |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |BLOBGETPOSITIONFROMBYTES    |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |BLOBGETPOSITIONFROMLOCATOR  |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |CLOBCREATELOCATOR           |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |CLOBGETLENGTH               |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |CLOBGETPOSITIONFROMLOCATOR  |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |CLOBGETPOSITIONFROMSTRING   |org.apache.derby.impl.jdbc.LOBStor&
SYSSPLICE        |CLOBGETSUBSTRING            |org.apache.derby.impl.jdbc.LOBStor&
splice> SHOW SYNONYMS IN USER1;
TABLE_SCHEM         |TABLE_NAME                    |REMARKS             
------------------------------------------------------------------------
USER1               |T3                            |                    
splice> --
-- DERBY-4553
--
GET SCROLL INSENSITIVE CURSOR CURS AS 'SELECT * FROM APP.T1';
splice> GETCURRENTROWNUMBER CURS;
0
splice> CLOSE CURS;
splice> -- DERBY-2019: ensure that tables with mixed-case names can be described:
SET SCHEMA APP;
0 rows inserted/updated/deleted
splice> create table "CamelCaseTable" (c1 int, c2 varchar(20));
0 rows inserted/updated/deleted
splice> -- should fail, as unquoted stirng is treated as case-insensitive upper case:
describe CamelCaseTable;
Splice ERROR: No table exists with the name CAMELCASETABLE
splice> describe APP.CamelCaseTable;
Splice ERROR: No table exists with the name CAMELCASETABLE
splice> -- should find the table, as quoted string case is preserved.
describe 'CamelCaseTable';
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> -- should fail, as case is wrong:
describe 'CAMELCaseTable';
Splice ERROR: No table exists with the name CAMELCaseTable
splice> -- should work, note that schema name must be upper case:
describe 'APP.CamelCaseTable';
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> set SCHEMA USER1;
0 rows inserted/updated/deleted
splice> -- should work, even after changing default schema, so long as schema is right
describe 'APP.CamelCaseTable';
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> -- should fail, since table is in the other schema
describe 'CamelCaseTable';
Splice ERROR: No table exists with the name CamelCaseTable
splice> -- Can use * as a wildcard for table name:
describe '*';
TABLE_SCHEM         |TABLE_NAME          |COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------------------------------------------------
USER1               |T2                  |I                   |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
USER1               |V1                  |I                   |INTEGER  |0   |10  |10    |NULL      |NULL      |NO      
USER1               |V1                  |D                   |DECIMAL  |2   |10  |5     |NULL      |NULL      |YES     
USER1               |V1                  |TEST                |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> describe 'APP.*';
TABLE_SCHEM         |TABLE_NAME          |COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------------------------------------------------
APP                 |CamelCaseTable      |C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
APP                 |CamelCaseTable      |C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
APP                 |T1                  |I                   |INTEGER  |0   |10  |10    |AUTOINCRE&|NULL      |NO      
APP                 |T1                  |D                   |DECIMAL  |2   |10  |5     |NULL      |NULL      |YES     
APP                 |T1                  |TEST                |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> -- Observe behavior with empty string:
describe '';
Splice ERROR: No table exists with the name (missing)
splice> --DERBY-2785:splice "describe" built in command cannot describe a table named "run"
create table run(c1 int, c2 varchar(20));
0 rows inserted/updated/deleted
splice> --should work
describe run;
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> create table "run"(c1 int, c2 varchar(20));
0 rows inserted/updated/deleted
splice> --should work
describe 'run';
COLUMN_NAME         |TYPE_NAME|DEC&|NUM&|COLUM&|COLUMN_DEF|CHAR_OCTE&|IS_NULL&
------------------------------------------------------------------------------
C1                  |INTEGER  |0   |10  |10    |NULL      |NULL      |YES     
C2                  |VARCHAR  |NULL|NULL|20    |NULL      |40        |YES     
splice> 
