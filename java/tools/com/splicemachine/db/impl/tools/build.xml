<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to you under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project default="compile" basedir="../../../../../../..">

<!-- Set Properties -->
  <!-- User settings -->
  <property file="${user.home}/ant.properties"/>
  <!-- Set property lib dir -->
  <property name="properties.dir" value="tools/ant/properties"/>
  <!-- Significant dirs -->
  <property file="${properties.dir}/dirs.properties"/>
  <!-- Compiler settings -->
  <property file="${properties.dir}/modern.properties"/>
  <!-- Compile-time classpath properties files -->
  <property file="${properties.dir}/extrapath.properties"/>

<!-- Targets -->
  <target name="compile" depends="compile_tools_impl"/>

  <target name="parser">
    <ant antfile="${src.dir}/build.xml" target="genParser">
      <property name="msg" value="Generating ij parser..."/>
      <property name="srcroot" value="tools"/>
			<property name="baseDir" value="tools"/>
			<property name="directory" value="${splice.package}/impl/tools/ij"/>
      <property name="rmfiles" value="ijimplparser_rm.files"/>
      <property name="jjfile" value="ij.jj"/>
      <property name="chkfile" value="ij.java"/>
      <property name="constantsfile" value="ijConstants"/>
    </ant>
    <ant antfile="${src.dir}/build.xml" target="genParser">
      <property name="msg" value="Generating mtGrammar parser..."/>
      <property name="srcroot" value="tools"/>
			<property name="baseDir" value="tools"/>
      <property name="directory" value="${splice.package}/impl/tools/ij"/>
      <property name="rmfiles" value="mtparser_rm.files"/>
      <property name="jjfile" value="mtGrammar.jj"/>
      <property name="chkfile" value="mtGrammar.java"/>
      <property name="constantsfile" value="mtGrammarConstants"/>
    </ant>

    <!--
      The following files were just generated:

      CharStream.java
      ij.java
      ijConstants.java
      ijTokenManager.java
      mtGrammar.java
      mtGrammarConstants.java
      mtGrammarTokenManager.java
      ParseException.java
      SimpleCharStream.java
      Token.java
      TokenMgrError.java

      1 of those files is checked into the codeline:

      ParseException.java

      We don't want generated code to clash with the checked-in versions. So
      we delete the conflicting class here.
    -->
    <delete>
      <fileset dir="${generated.ij.dir}">
        <include name="ParseException.java"/>
      </fileset>
    </delete>

  </target>

  <target name="compile_tools_impl" depends="parser">
					<echo message="srcpath=${derby.tools.src.dir}:${generated.ij.dir}" />
    <javac
      source="1.7"
      target="1.7"
      bootclasspath="${empty}"
      nowarn="on"
      debug="${debug}"
      depend="${depend}"
      deprecation="${deprecation}"
      optimize="${optimize}"
      proceed="${proceed}"
      verbose="${verbose}"
			srcdir="${derby.tools.src.dir}:${generated.src.dir}/tools"
      destdir="${out.dir}">
      <classpath>
        <pathelement path="${main.classpath}"/>
      </classpath>
      <include name="${splice.package}/impl/tools/**"/>
    </javac>
   </target>

</project>

